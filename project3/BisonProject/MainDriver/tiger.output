State 89 conflicts: 12 shift/reduce
State 91 conflicts: 13 shift/reduce
State 92 conflicts: 12 shift/reduce
State 119 conflicts: 12 shift/reduce
State 141 conflicts: 12 shift/reduce


Grammar

    0 $accept: program $end

    1 program: expr

    2 expr: STRING
    3     | INT
    4     | NIL
    5     | MINUS expr
    6     | expr PLUS expr
    7     | expr MINUS expr
    8     | expr TIMES expr
    9     | expr DIVIDE expr
   10     | expr EQ expr
   11     | expr NEQ expr
   12     | expr GT expr
   13     | expr LT expr
   14     | expr LE expr
   15     | expr GE expr
   16     | expr AND expr
   17     | expr OR expr
   18     | lValue
   19     | lValue ASSIGN expr
   20     | LPAREN exprSeq RPAREN
   21     | BREAK
   22     | FOR ID ASSIGN expr TO expr DO expr
   23     | WHILE expr DO expr
   24     | IF expr THEN expr
   25     | IF expr THEN expr ELSE expr
   26     | ID LPAREN exprList RPAREN
   27     | ID LPAREN RPAREN
   28     | ID array_expr OF expr
   29     | LET declarationList IN exprSeq END
   30     | LET declarationList IN END
   31     | ID LBRACE fieldList RBRACE
   32     | ID LBRACE RBRACE
   33     | error

   34 array_expr: LBRACK expr RBRACK
   35           | array_expr LBRACK expr RBRACK

   36 exprSeq: expr
   37        | exprSeq SEMICOLON expr

   38 exprList: expr
   39         | exprList COMMA expr

   40 fieldList: ID EQ expr
   41          | fieldList COMMA ID EQ expr

   42 lValue: ID
   43       | lValue DOT ID
   44       | ID array_expr
   45       | lValue DOT ID array_expr

   46 declaration: typeDeclaration
   47            | variableDeclaration
   48            | functionDeclaration

   49 declarationList: declaration
   50                | declarationList declaration

   51 typeDeclaration: TYPE ID EQ type

   52 type: ID
   53     | LBRACE typeFields RBRACE
   54     | LBRACE RBRACE
   55     | ARRAY OF ID

   56 typeField: ID COLON ID

   57 typeFields: typeField
   58           | typeFields COMMA typeField

   59 variableDeclaration: VAR ID ASSIGN expr
   60                    | VAR ID COLON ID ASSIGN expr

   61 functionDeclaration: FUNCTION ID LPAREN typeFields RPAREN COLON ID EQ expr
   62                    | FUNCTION ID LPAREN RPAREN COLON ID EQ expr
   63                    | FUNCTION ID LPAREN typeFields RPAREN EQ expr
   64                    | FUNCTION ID LPAREN RPAREN EQ expr


Terminals, with rules where they appear

$end (0) 0
error (256) 33
ID (258) 22 26 27 28 31 32 40 41 42 43 44 45 51 52 55 56 59 60 61 62
    63 64
STRING (259) 2
INT (260) 3
COMMA (261) 39 41 58
COLON (262) 56 60 61 62
SEMICOLON (263) 37
LPAREN (264) 20 26 27 61 62 63 64
RPAREN (265) 20 26 27 61 62 63 64
LBRACK (266) 34 35
RBRACK (267) 34 35
LBRACE (268) 31 32 53 54
RBRACE (269) 31 32 53 54
DOT (270) 43 45
ARRAY (271) 55
IF (272) 24 25
THEN (273) 24 25
ELSE (274) 25
WHILE (275) 23
FOR (276) 22
TO (277) 22
DO (278) 22 23
LET (279) 29 30
IN (280) 29 30
END (281) 29 30
OF (282) 28 55
BREAK (283) 21
NIL (284) 4
FUNCTION (285) 61 62 63 64
VAR (286) 59 60
TYPE (287) 51
ASSIGN (288) 19 22 59 60
OR (289) 17
AND (290) 16
GE (291) 15
GT (292) 12
LE (293) 14
LT (294) 13
NEQ (295) 11
EQ (296) 10 40 41 51 61 62 63 64
MINUS (297) 5 7
PLUS (298) 6
DIVIDE (299) 9
TIMES (300) 8
UMINUS (301)


Nonterminals, with rules where they appear

$accept (47)
    on left: 0
program (48)
    on left: 1, on right: 0
expr (49)
    on left: 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22
    23 24 25 26 27 28 29 30 31 32 33, on right: 1 5 6 7 8 9 10 11 12
    13 14 15 16 17 19 22 23 24 25 28 34 35 36 37 38 39 40 41 59 60
    61 62 63 64
array_expr (50)
    on left: 34 35, on right: 28 35 44 45
exprSeq (51)
    on left: 36 37, on right: 20 29 37
exprList (52)
    on left: 38 39, on right: 26 39
fieldList (53)
    on left: 40 41, on right: 31 41
lValue (54)
    on left: 42 43 44 45, on right: 18 19 43 45
declaration (55)
    on left: 46 47 48, on right: 49 50
declarationList (56)
    on left: 49 50, on right: 29 30 50
typeDeclaration (57)
    on left: 51, on right: 46
type (58)
    on left: 52 53 54 55, on right: 51
typeField (59)
    on left: 56, on right: 57 58
typeFields (60)
    on left: 57 58, on right: 53 58 61 63
variableDeclaration (61)
    on left: 59 60, on right: 47
functionDeclaration (62)
    on left: 61 62 63 64, on right: 48


state 0

    0 $accept: . program $end

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11
    MINUS   shift, and go to state 12

    program  go to state 13
    expr     go to state 14
    lValue   go to state 15


state 1

   33 expr: error .

    $default  reduce using rule 33 (expr)


state 2

   26 expr: ID . LPAREN exprList RPAREN
   27     | ID . LPAREN RPAREN
   28     | ID . array_expr OF expr
   31     | ID . LBRACE fieldList RBRACE
   32     | ID . LBRACE RBRACE
   42 lValue: ID .
   44       | ID . array_expr

    LPAREN  shift, and go to state 16
    LBRACK  shift, and go to state 17
    LBRACE  shift, and go to state 18

    $default  reduce using rule 42 (lValue)

    array_expr  go to state 19


state 3

    2 expr: STRING .

    $default  reduce using rule 2 (expr)


state 4

    3 expr: INT .

    $default  reduce using rule 3 (expr)


state 5

   20 expr: LPAREN . exprSeq RPAREN

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11
    MINUS   shift, and go to state 12

    expr     go to state 20
    exprSeq  go to state 21
    lValue   go to state 15


state 6

   24 expr: IF . expr THEN expr
   25     | IF . expr THEN expr ELSE expr

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11
    MINUS   shift, and go to state 12

    expr    go to state 22
    lValue  go to state 15


state 7

   23 expr: WHILE . expr DO expr

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11
    MINUS   shift, and go to state 12

    expr    go to state 23
    lValue  go to state 15


state 8

   22 expr: FOR . ID ASSIGN expr TO expr DO expr

    ID  shift, and go to state 24


state 9

   29 expr: LET . declarationList IN exprSeq END
   30     | LET . declarationList IN END

    FUNCTION  shift, and go to state 25
    VAR       shift, and go to state 26
    TYPE      shift, and go to state 27

    declaration          go to state 28
    declarationList      go to state 29
    typeDeclaration      go to state 30
    variableDeclaration  go to state 31
    functionDeclaration  go to state 32


state 10

   21 expr: BREAK .

    $default  reduce using rule 21 (expr)


state 11

    4 expr: NIL .

    $default  reduce using rule 4 (expr)


state 12

    5 expr: MINUS . expr

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11
    MINUS   shift, and go to state 12

    expr    go to state 33
    lValue  go to state 15


state 13

    0 $accept: program . $end

    $end  shift, and go to state 34


state 14

    1 program: expr .
    6 expr: expr . PLUS expr
    7     | expr . MINUS expr
    8     | expr . TIMES expr
    9     | expr . DIVIDE expr
   10     | expr . EQ expr
   11     | expr . NEQ expr
   12     | expr . GT expr
   13     | expr . LT expr
   14     | expr . LE expr
   15     | expr . GE expr
   16     | expr . AND expr
   17     | expr . OR expr

    OR      shift, and go to state 35
    AND     shift, and go to state 36
    GE      shift, and go to state 37
    GT      shift, and go to state 38
    LE      shift, and go to state 39
    LT      shift, and go to state 40
    NEQ     shift, and go to state 41
    EQ      shift, and go to state 42
    MINUS   shift, and go to state 43
    PLUS    shift, and go to state 44
    DIVIDE  shift, and go to state 45
    TIMES   shift, and go to state 46

    $default  reduce using rule 1 (program)


state 15

   18 expr: lValue .
   19     | lValue . ASSIGN expr
   43 lValue: lValue . DOT ID
   45       | lValue . DOT ID array_expr

    DOT     shift, and go to state 47
    ASSIGN  shift, and go to state 48

    $default  reduce using rule 18 (expr)


state 16

   26 expr: ID LPAREN . exprList RPAREN
   27     | ID LPAREN . RPAREN

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    RPAREN  shift, and go to state 49
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11
    MINUS   shift, and go to state 12

    expr      go to state 50
    exprList  go to state 51
    lValue    go to state 15


state 17

   34 array_expr: LBRACK . expr RBRACK

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11
    MINUS   shift, and go to state 12

    expr    go to state 52
    lValue  go to state 15


state 18

   31 expr: ID LBRACE . fieldList RBRACE
   32     | ID LBRACE . RBRACE

    ID      shift, and go to state 53
    RBRACE  shift, and go to state 54

    fieldList  go to state 55


state 19

   28 expr: ID array_expr . OF expr
   35 array_expr: array_expr . LBRACK expr RBRACK
   44 lValue: ID array_expr .

    LBRACK  shift, and go to state 56
    OF      shift, and go to state 57

    $default  reduce using rule 44 (lValue)


state 20

    6 expr: expr . PLUS expr
    7     | expr . MINUS expr
    8     | expr . TIMES expr
    9     | expr . DIVIDE expr
   10     | expr . EQ expr
   11     | expr . NEQ expr
   12     | expr . GT expr
   13     | expr . LT expr
   14     | expr . LE expr
   15     | expr . GE expr
   16     | expr . AND expr
   17     | expr . OR expr
   36 exprSeq: expr .

    OR      shift, and go to state 35
    AND     shift, and go to state 36
    GE      shift, and go to state 37
    GT      shift, and go to state 38
    LE      shift, and go to state 39
    LT      shift, and go to state 40
    NEQ     shift, and go to state 41
    EQ      shift, and go to state 42
    MINUS   shift, and go to state 43
    PLUS    shift, and go to state 44
    DIVIDE  shift, and go to state 45
    TIMES   shift, and go to state 46

    $default  reduce using rule 36 (exprSeq)


state 21

   20 expr: LPAREN exprSeq . RPAREN
   37 exprSeq: exprSeq . SEMICOLON expr

    SEMICOLON  shift, and go to state 58
    RPAREN     shift, and go to state 59


state 22

    6 expr: expr . PLUS expr
    7     | expr . MINUS expr
    8     | expr . TIMES expr
    9     | expr . DIVIDE expr
   10     | expr . EQ expr
   11     | expr . NEQ expr
   12     | expr . GT expr
   13     | expr . LT expr
   14     | expr . LE expr
   15     | expr . GE expr
   16     | expr . AND expr
   17     | expr . OR expr
   24     | IF expr . THEN expr
   25     | IF expr . THEN expr ELSE expr

    THEN    shift, and go to state 60
    OR      shift, and go to state 35
    AND     shift, and go to state 36
    GE      shift, and go to state 37
    GT      shift, and go to state 38
    LE      shift, and go to state 39
    LT      shift, and go to state 40
    NEQ     shift, and go to state 41
    EQ      shift, and go to state 42
    MINUS   shift, and go to state 43
    PLUS    shift, and go to state 44
    DIVIDE  shift, and go to state 45
    TIMES   shift, and go to state 46


state 23

    6 expr: expr . PLUS expr
    7     | expr . MINUS expr
    8     | expr . TIMES expr
    9     | expr . DIVIDE expr
   10     | expr . EQ expr
   11     | expr . NEQ expr
   12     | expr . GT expr
   13     | expr . LT expr
   14     | expr . LE expr
   15     | expr . GE expr
   16     | expr . AND expr
   17     | expr . OR expr
   23     | WHILE expr . DO expr

    DO      shift, and go to state 61
    OR      shift, and go to state 35
    AND     shift, and go to state 36
    GE      shift, and go to state 37
    GT      shift, and go to state 38
    LE      shift, and go to state 39
    LT      shift, and go to state 40
    NEQ     shift, and go to state 41
    EQ      shift, and go to state 42
    MINUS   shift, and go to state 43
    PLUS    shift, and go to state 44
    DIVIDE  shift, and go to state 45
    TIMES   shift, and go to state 46


state 24

   22 expr: FOR ID . ASSIGN expr TO expr DO expr

    ASSIGN  shift, and go to state 62


state 25

   61 functionDeclaration: FUNCTION . ID LPAREN typeFields RPAREN COLON ID EQ expr
   62                    | FUNCTION . ID LPAREN RPAREN COLON ID EQ expr
   63                    | FUNCTION . ID LPAREN typeFields RPAREN EQ expr
   64                    | FUNCTION . ID LPAREN RPAREN EQ expr

    ID  shift, and go to state 63


state 26

   59 variableDeclaration: VAR . ID ASSIGN expr
   60                    | VAR . ID COLON ID ASSIGN expr

    ID  shift, and go to state 64


state 27

   51 typeDeclaration: TYPE . ID EQ type

    ID  shift, and go to state 65


state 28

   49 declarationList: declaration .

    $default  reduce using rule 49 (declarationList)


state 29

   29 expr: LET declarationList . IN exprSeq END
   30     | LET declarationList . IN END
   50 declarationList: declarationList . declaration

    IN        shift, and go to state 66
    FUNCTION  shift, and go to state 25
    VAR       shift, and go to state 26
    TYPE      shift, and go to state 27

    declaration          go to state 67
    typeDeclaration      go to state 30
    variableDeclaration  go to state 31
    functionDeclaration  go to state 32


state 30

   46 declaration: typeDeclaration .

    $default  reduce using rule 46 (declaration)


state 31

   47 declaration: variableDeclaration .

    $default  reduce using rule 47 (declaration)


state 32

   48 declaration: functionDeclaration .

    $default  reduce using rule 48 (declaration)


state 33

    5 expr: MINUS expr .
    6     | expr . PLUS expr
    7     | expr . MINUS expr
    8     | expr . TIMES expr
    9     | expr . DIVIDE expr
   10     | expr . EQ expr
   11     | expr . NEQ expr
   12     | expr . GT expr
   13     | expr . LT expr
   14     | expr . LE expr
   15     | expr . GE expr
   16     | expr . AND expr
   17     | expr . OR expr

    $default  reduce using rule 5 (expr)


state 34

    0 $accept: program $end .

    $default  accept


state 35

   17 expr: expr OR . expr

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11
    MINUS   shift, and go to state 12

    expr    go to state 68
    lValue  go to state 15


state 36

   16 expr: expr AND . expr

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11
    MINUS   shift, and go to state 12

    expr    go to state 69
    lValue  go to state 15


state 37

   15 expr: expr GE . expr

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11
    MINUS   shift, and go to state 12

    expr    go to state 70
    lValue  go to state 15


state 38

   12 expr: expr GT . expr

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11
    MINUS   shift, and go to state 12

    expr    go to state 71
    lValue  go to state 15


state 39

   14 expr: expr LE . expr

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11
    MINUS   shift, and go to state 12

    expr    go to state 72
    lValue  go to state 15


state 40

   13 expr: expr LT . expr

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11
    MINUS   shift, and go to state 12

    expr    go to state 73
    lValue  go to state 15


state 41

   11 expr: expr NEQ . expr

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11
    MINUS   shift, and go to state 12

    expr    go to state 74
    lValue  go to state 15


state 42

   10 expr: expr EQ . expr

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11
    MINUS   shift, and go to state 12

    expr    go to state 75
    lValue  go to state 15


state 43

    7 expr: expr MINUS . expr

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11
    MINUS   shift, and go to state 12

    expr    go to state 76
    lValue  go to state 15


state 44

    6 expr: expr PLUS . expr

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11
    MINUS   shift, and go to state 12

    expr    go to state 77
    lValue  go to state 15


state 45

    9 expr: expr DIVIDE . expr

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11
    MINUS   shift, and go to state 12

    expr    go to state 78
    lValue  go to state 15


state 46

    8 expr: expr TIMES . expr

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11
    MINUS   shift, and go to state 12

    expr    go to state 79
    lValue  go to state 15


state 47

   43 lValue: lValue DOT . ID
   45       | lValue DOT . ID array_expr

    ID  shift, and go to state 80


state 48

   19 expr: lValue ASSIGN . expr

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11
    MINUS   shift, and go to state 12

    expr    go to state 81
    lValue  go to state 15


state 49

   27 expr: ID LPAREN RPAREN .

    $default  reduce using rule 27 (expr)


state 50

    6 expr: expr . PLUS expr
    7     | expr . MINUS expr
    8     | expr . TIMES expr
    9     | expr . DIVIDE expr
   10     | expr . EQ expr
   11     | expr . NEQ expr
   12     | expr . GT expr
   13     | expr . LT expr
   14     | expr . LE expr
   15     | expr . GE expr
   16     | expr . AND expr
   17     | expr . OR expr
   38 exprList: expr .

    OR      shift, and go to state 35
    AND     shift, and go to state 36
    GE      shift, and go to state 37
    GT      shift, and go to state 38
    LE      shift, and go to state 39
    LT      shift, and go to state 40
    NEQ     shift, and go to state 41
    EQ      shift, and go to state 42
    MINUS   shift, and go to state 43
    PLUS    shift, and go to state 44
    DIVIDE  shift, and go to state 45
    TIMES   shift, and go to state 46

    $default  reduce using rule 38 (exprList)


state 51

   26 expr: ID LPAREN exprList . RPAREN
   39 exprList: exprList . COMMA expr

    COMMA   shift, and go to state 82
    RPAREN  shift, and go to state 83


state 52

    6 expr: expr . PLUS expr
    7     | expr . MINUS expr
    8     | expr . TIMES expr
    9     | expr . DIVIDE expr
   10     | expr . EQ expr
   11     | expr . NEQ expr
   12     | expr . GT expr
   13     | expr . LT expr
   14     | expr . LE expr
   15     | expr . GE expr
   16     | expr . AND expr
   17     | expr . OR expr
   34 array_expr: LBRACK expr . RBRACK

    RBRACK  shift, and go to state 84
    OR      shift, and go to state 35
    AND     shift, and go to state 36
    GE      shift, and go to state 37
    GT      shift, and go to state 38
    LE      shift, and go to state 39
    LT      shift, and go to state 40
    NEQ     shift, and go to state 41
    EQ      shift, and go to state 42
    MINUS   shift, and go to state 43
    PLUS    shift, and go to state 44
    DIVIDE  shift, and go to state 45
    TIMES   shift, and go to state 46


state 53

   40 fieldList: ID . EQ expr

    EQ  shift, and go to state 85


state 54

   32 expr: ID LBRACE RBRACE .

    $default  reduce using rule 32 (expr)


state 55

   31 expr: ID LBRACE fieldList . RBRACE
   41 fieldList: fieldList . COMMA ID EQ expr

    COMMA   shift, and go to state 86
    RBRACE  shift, and go to state 87


state 56

   35 array_expr: array_expr LBRACK . expr RBRACK

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11
    MINUS   shift, and go to state 12

    expr    go to state 88
    lValue  go to state 15


state 57

   28 expr: ID array_expr OF . expr

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11
    MINUS   shift, and go to state 12

    expr    go to state 89
    lValue  go to state 15


state 58

   37 exprSeq: exprSeq SEMICOLON . expr

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11
    MINUS   shift, and go to state 12

    expr    go to state 90
    lValue  go to state 15


state 59

   20 expr: LPAREN exprSeq RPAREN .

    $default  reduce using rule 20 (expr)


state 60

   24 expr: IF expr THEN . expr
   25     | IF expr THEN . expr ELSE expr

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11
    MINUS   shift, and go to state 12

    expr    go to state 91
    lValue  go to state 15


state 61

   23 expr: WHILE expr DO . expr

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11
    MINUS   shift, and go to state 12

    expr    go to state 92
    lValue  go to state 15


state 62

   22 expr: FOR ID ASSIGN . expr TO expr DO expr

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11
    MINUS   shift, and go to state 12

    expr    go to state 93
    lValue  go to state 15


state 63

   61 functionDeclaration: FUNCTION ID . LPAREN typeFields RPAREN COLON ID EQ expr
   62                    | FUNCTION ID . LPAREN RPAREN COLON ID EQ expr
   63                    | FUNCTION ID . LPAREN typeFields RPAREN EQ expr
   64                    | FUNCTION ID . LPAREN RPAREN EQ expr

    LPAREN  shift, and go to state 94


state 64

   59 variableDeclaration: VAR ID . ASSIGN expr
   60                    | VAR ID . COLON ID ASSIGN expr

    COLON   shift, and go to state 95
    ASSIGN  shift, and go to state 96


state 65

   51 typeDeclaration: TYPE ID . EQ type

    EQ  shift, and go to state 97


state 66

   29 expr: LET declarationList IN . exprSeq END
   30     | LET declarationList IN . END

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    END     shift, and go to state 98
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11
    MINUS   shift, and go to state 12

    expr     go to state 20
    exprSeq  go to state 99
    lValue   go to state 15


state 67

   50 declarationList: declarationList declaration .

    $default  reduce using rule 50 (declarationList)


state 68

    6 expr: expr . PLUS expr
    7     | expr . MINUS expr
    8     | expr . TIMES expr
    9     | expr . DIVIDE expr
   10     | expr . EQ expr
   11     | expr . NEQ expr
   12     | expr . GT expr
   13     | expr . LT expr
   14     | expr . LE expr
   15     | expr . GE expr
   16     | expr . AND expr
   17     | expr . OR expr
   17     | expr OR expr .

    AND     shift, and go to state 36
    GE      shift, and go to state 37
    GT      shift, and go to state 38
    LE      shift, and go to state 39
    LT      shift, and go to state 40
    NEQ     shift, and go to state 41
    EQ      shift, and go to state 42
    MINUS   shift, and go to state 43
    PLUS    shift, and go to state 44
    DIVIDE  shift, and go to state 45
    TIMES   shift, and go to state 46

    $default  reduce using rule 17 (expr)


state 69

    6 expr: expr . PLUS expr
    7     | expr . MINUS expr
    8     | expr . TIMES expr
    9     | expr . DIVIDE expr
   10     | expr . EQ expr
   11     | expr . NEQ expr
   12     | expr . GT expr
   13     | expr . LT expr
   14     | expr . LE expr
   15     | expr . GE expr
   16     | expr . AND expr
   16     | expr AND expr .
   17     | expr . OR expr

    GE      shift, and go to state 37
    GT      shift, and go to state 38
    LE      shift, and go to state 39
    LT      shift, and go to state 40
    NEQ     shift, and go to state 41
    EQ      shift, and go to state 42
    MINUS   shift, and go to state 43
    PLUS    shift, and go to state 44
    DIVIDE  shift, and go to state 45
    TIMES   shift, and go to state 46

    $default  reduce using rule 16 (expr)


state 70

    6 expr: expr . PLUS expr
    7     | expr . MINUS expr
    8     | expr . TIMES expr
    9     | expr . DIVIDE expr
   10     | expr . EQ expr
   11     | expr . NEQ expr
   12     | expr . GT expr
   13     | expr . LT expr
   14     | expr . LE expr
   15     | expr . GE expr
   15     | expr GE expr .
   16     | expr . AND expr
   17     | expr . OR expr

    MINUS   shift, and go to state 43
    PLUS    shift, and go to state 44
    DIVIDE  shift, and go to state 45
    TIMES   shift, and go to state 46

    GE   error (nonassociative)
    GT   error (nonassociative)
    LE   error (nonassociative)
    LT   error (nonassociative)
    NEQ  error (nonassociative)
    EQ   error (nonassociative)

    $default  reduce using rule 15 (expr)


state 71

    6 expr: expr . PLUS expr
    7     | expr . MINUS expr
    8     | expr . TIMES expr
    9     | expr . DIVIDE expr
   10     | expr . EQ expr
   11     | expr . NEQ expr
   12     | expr . GT expr
   12     | expr GT expr .
   13     | expr . LT expr
   14     | expr . LE expr
   15     | expr . GE expr
   16     | expr . AND expr
   17     | expr . OR expr

    MINUS   shift, and go to state 43
    PLUS    shift, and go to state 44
    DIVIDE  shift, and go to state 45
    TIMES   shift, and go to state 46

    GE   error (nonassociative)
    GT   error (nonassociative)
    LE   error (nonassociative)
    LT   error (nonassociative)
    NEQ  error (nonassociative)
    EQ   error (nonassociative)

    $default  reduce using rule 12 (expr)


state 72

    6 expr: expr . PLUS expr
    7     | expr . MINUS expr
    8     | expr . TIMES expr
    9     | expr . DIVIDE expr
   10     | expr . EQ expr
   11     | expr . NEQ expr
   12     | expr . GT expr
   13     | expr . LT expr
   14     | expr . LE expr
   14     | expr LE expr .
   15     | expr . GE expr
   16     | expr . AND expr
   17     | expr . OR expr

    MINUS   shift, and go to state 43
    PLUS    shift, and go to state 44
    DIVIDE  shift, and go to state 45
    TIMES   shift, and go to state 46

    GE   error (nonassociative)
    GT   error (nonassociative)
    LE   error (nonassociative)
    LT   error (nonassociative)
    NEQ  error (nonassociative)
    EQ   error (nonassociative)

    $default  reduce using rule 14 (expr)


state 73

    6 expr: expr . PLUS expr
    7     | expr . MINUS expr
    8     | expr . TIMES expr
    9     | expr . DIVIDE expr
   10     | expr . EQ expr
   11     | expr . NEQ expr
   12     | expr . GT expr
   13     | expr . LT expr
   13     | expr LT expr .
   14     | expr . LE expr
   15     | expr . GE expr
   16     | expr . AND expr
   17     | expr . OR expr

    MINUS   shift, and go to state 43
    PLUS    shift, and go to state 44
    DIVIDE  shift, and go to state 45
    TIMES   shift, and go to state 46

    GE   error (nonassociative)
    GT   error (nonassociative)
    LE   error (nonassociative)
    LT   error (nonassociative)
    NEQ  error (nonassociative)
    EQ   error (nonassociative)

    $default  reduce using rule 13 (expr)


state 74

    6 expr: expr . PLUS expr
    7     | expr . MINUS expr
    8     | expr . TIMES expr
    9     | expr . DIVIDE expr
   10     | expr . EQ expr
   11     | expr . NEQ expr
   11     | expr NEQ expr .
   12     | expr . GT expr
   13     | expr . LT expr
   14     | expr . LE expr
   15     | expr . GE expr
   16     | expr . AND expr
   17     | expr . OR expr

    MINUS   shift, and go to state 43
    PLUS    shift, and go to state 44
    DIVIDE  shift, and go to state 45
    TIMES   shift, and go to state 46

    GE   error (nonassociative)
    GT   error (nonassociative)
    LE   error (nonassociative)
    LT   error (nonassociative)
    NEQ  error (nonassociative)
    EQ   error (nonassociative)

    $default  reduce using rule 11 (expr)


state 75

    6 expr: expr . PLUS expr
    7     | expr . MINUS expr
    8     | expr . TIMES expr
    9     | expr . DIVIDE expr
   10     | expr . EQ expr
   10     | expr EQ expr .
   11     | expr . NEQ expr
   12     | expr . GT expr
   13     | expr . LT expr
   14     | expr . LE expr
   15     | expr . GE expr
   16     | expr . AND expr
   17     | expr . OR expr

    MINUS   shift, and go to state 43
    PLUS    shift, and go to state 44
    DIVIDE  shift, and go to state 45
    TIMES   shift, and go to state 46

    GE   error (nonassociative)
    GT   error (nonassociative)
    LE   error (nonassociative)
    LT   error (nonassociative)
    NEQ  error (nonassociative)
    EQ   error (nonassociative)

    $default  reduce using rule 10 (expr)


state 76

    6 expr: expr . PLUS expr
    7     | expr . MINUS expr
    7     | expr MINUS expr .
    8     | expr . TIMES expr
    9     | expr . DIVIDE expr
   10     | expr . EQ expr
   11     | expr . NEQ expr
   12     | expr . GT expr
   13     | expr . LT expr
   14     | expr . LE expr
   15     | expr . GE expr
   16     | expr . AND expr
   17     | expr . OR expr

    DIVIDE  shift, and go to state 45
    TIMES   shift, and go to state 46

    $default  reduce using rule 7 (expr)


state 77

    6 expr: expr . PLUS expr
    6     | expr PLUS expr .
    7     | expr . MINUS expr
    8     | expr . TIMES expr
    9     | expr . DIVIDE expr
   10     | expr . EQ expr
   11     | expr . NEQ expr
   12     | expr . GT expr
   13     | expr . LT expr
   14     | expr . LE expr
   15     | expr . GE expr
   16     | expr . AND expr
   17     | expr . OR expr

    DIVIDE  shift, and go to state 45
    TIMES   shift, and go to state 46

    $default  reduce using rule 6 (expr)


state 78

    6 expr: expr . PLUS expr
    7     | expr . MINUS expr
    8     | expr . TIMES expr
    9     | expr . DIVIDE expr
    9     | expr DIVIDE expr .
   10     | expr . EQ expr
   11     | expr . NEQ expr
   12     | expr . GT expr
   13     | expr . LT expr
   14     | expr . LE expr
   15     | expr . GE expr
   16     | expr . AND expr
   17     | expr . OR expr

    $default  reduce using rule 9 (expr)


state 79

    6 expr: expr . PLUS expr
    7     | expr . MINUS expr
    8     | expr . TIMES expr
    8     | expr TIMES expr .
    9     | expr . DIVIDE expr
   10     | expr . EQ expr
   11     | expr . NEQ expr
   12     | expr . GT expr
   13     | expr . LT expr
   14     | expr . LE expr
   15     | expr . GE expr
   16     | expr . AND expr
   17     | expr . OR expr

    $default  reduce using rule 8 (expr)


state 80

   43 lValue: lValue DOT ID .
   45       | lValue DOT ID . array_expr

    LBRACK  shift, and go to state 17

    $default  reduce using rule 43 (lValue)

    array_expr  go to state 100


state 81

    6 expr: expr . PLUS expr
    7     | expr . MINUS expr
    8     | expr . TIMES expr
    9     | expr . DIVIDE expr
   10     | expr . EQ expr
   11     | expr . NEQ expr
   12     | expr . GT expr
   13     | expr . LT expr
   14     | expr . LE expr
   15     | expr . GE expr
   16     | expr . AND expr
   17     | expr . OR expr
   19     | lValue ASSIGN expr .

    OR      shift, and go to state 35
    AND     shift, and go to state 36
    GE      shift, and go to state 37
    GT      shift, and go to state 38
    LE      shift, and go to state 39
    LT      shift, and go to state 40
    NEQ     shift, and go to state 41
    EQ      shift, and go to state 42
    MINUS   shift, and go to state 43
    PLUS    shift, and go to state 44
    DIVIDE  shift, and go to state 45
    TIMES   shift, and go to state 46

    $default  reduce using rule 19 (expr)


state 82

   39 exprList: exprList COMMA . expr

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11
    MINUS   shift, and go to state 12

    expr    go to state 101
    lValue  go to state 15


state 83

   26 expr: ID LPAREN exprList RPAREN .

    $default  reduce using rule 26 (expr)


state 84

   34 array_expr: LBRACK expr RBRACK .

    $default  reduce using rule 34 (array_expr)


state 85

   40 fieldList: ID EQ . expr

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11
    MINUS   shift, and go to state 12

    expr    go to state 102
    lValue  go to state 15


state 86

   41 fieldList: fieldList COMMA . ID EQ expr

    ID  shift, and go to state 103


state 87

   31 expr: ID LBRACE fieldList RBRACE .

    $default  reduce using rule 31 (expr)


state 88

    6 expr: expr . PLUS expr
    7     | expr . MINUS expr
    8     | expr . TIMES expr
    9     | expr . DIVIDE expr
   10     | expr . EQ expr
   11     | expr . NEQ expr
   12     | expr . GT expr
   13     | expr . LT expr
   14     | expr . LE expr
   15     | expr . GE expr
   16     | expr . AND expr
   17     | expr . OR expr
   35 array_expr: array_expr LBRACK expr . RBRACK

    RBRACK  shift, and go to state 104
    OR      shift, and go to state 35
    AND     shift, and go to state 36
    GE      shift, and go to state 37
    GT      shift, and go to state 38
    LE      shift, and go to state 39
    LT      shift, and go to state 40
    NEQ     shift, and go to state 41
    EQ      shift, and go to state 42
    MINUS   shift, and go to state 43
    PLUS    shift, and go to state 44
    DIVIDE  shift, and go to state 45
    TIMES   shift, and go to state 46


state 89

    6 expr: expr . PLUS expr
    7     | expr . MINUS expr
    8     | expr . TIMES expr
    9     | expr . DIVIDE expr
   10     | expr . EQ expr
   11     | expr . NEQ expr
   12     | expr . GT expr
   13     | expr . LT expr
   14     | expr . LE expr
   15     | expr . GE expr
   16     | expr . AND expr
   17     | expr . OR expr
   28     | ID array_expr OF expr .

    OR      shift, and go to state 35
    AND     shift, and go to state 36
    GE      shift, and go to state 37
    GT      shift, and go to state 38
    LE      shift, and go to state 39
    LT      shift, and go to state 40
    NEQ     shift, and go to state 41
    EQ      shift, and go to state 42
    MINUS   shift, and go to state 43
    PLUS    shift, and go to state 44
    DIVIDE  shift, and go to state 45
    TIMES   shift, and go to state 46

    OR        [reduce using rule 28 (expr)]
    AND       [reduce using rule 28 (expr)]
    GE        [reduce using rule 28 (expr)]
    GT        [reduce using rule 28 (expr)]
    LE        [reduce using rule 28 (expr)]
    LT        [reduce using rule 28 (expr)]
    NEQ       [reduce using rule 28 (expr)]
    EQ        [reduce using rule 28 (expr)]
    MINUS     [reduce using rule 28 (expr)]
    PLUS      [reduce using rule 28 (expr)]
    DIVIDE    [reduce using rule 28 (expr)]
    TIMES     [reduce using rule 28 (expr)]
    $default  reduce using rule 28 (expr)


state 90

    6 expr: expr . PLUS expr
    7     | expr . MINUS expr
    8     | expr . TIMES expr
    9     | expr . DIVIDE expr
   10     | expr . EQ expr
   11     | expr . NEQ expr
   12     | expr . GT expr
   13     | expr . LT expr
   14     | expr . LE expr
   15     | expr . GE expr
   16     | expr . AND expr
   17     | expr . OR expr
   37 exprSeq: exprSeq SEMICOLON expr .

    OR      shift, and go to state 35
    AND     shift, and go to state 36
    GE      shift, and go to state 37
    GT      shift, and go to state 38
    LE      shift, and go to state 39
    LT      shift, and go to state 40
    NEQ     shift, and go to state 41
    EQ      shift, and go to state 42
    MINUS   shift, and go to state 43
    PLUS    shift, and go to state 44
    DIVIDE  shift, and go to state 45
    TIMES   shift, and go to state 46

    $default  reduce using rule 37 (exprSeq)


state 91

    6 expr: expr . PLUS expr
    7     | expr . MINUS expr
    8     | expr . TIMES expr
    9     | expr . DIVIDE expr
   10     | expr . EQ expr
   11     | expr . NEQ expr
   12     | expr . GT expr
   13     | expr . LT expr
   14     | expr . LE expr
   15     | expr . GE expr
   16     | expr . AND expr
   17     | expr . OR expr
   24     | IF expr THEN expr .
   25     | IF expr THEN expr . ELSE expr

    ELSE    shift, and go to state 105
    OR      shift, and go to state 35
    AND     shift, and go to state 36
    GE      shift, and go to state 37
    GT      shift, and go to state 38
    LE      shift, and go to state 39
    LT      shift, and go to state 40
    NEQ     shift, and go to state 41
    EQ      shift, and go to state 42
    MINUS   shift, and go to state 43
    PLUS    shift, and go to state 44
    DIVIDE  shift, and go to state 45
    TIMES   shift, and go to state 46

    ELSE      [reduce using rule 24 (expr)]
    OR        [reduce using rule 24 (expr)]
    AND       [reduce using rule 24 (expr)]
    GE        [reduce using rule 24 (expr)]
    GT        [reduce using rule 24 (expr)]
    LE        [reduce using rule 24 (expr)]
    LT        [reduce using rule 24 (expr)]
    NEQ       [reduce using rule 24 (expr)]
    EQ        [reduce using rule 24 (expr)]
    MINUS     [reduce using rule 24 (expr)]
    PLUS      [reduce using rule 24 (expr)]
    DIVIDE    [reduce using rule 24 (expr)]
    TIMES     [reduce using rule 24 (expr)]
    $default  reduce using rule 24 (expr)


state 92

    6 expr: expr . PLUS expr
    7     | expr . MINUS expr
    8     | expr . TIMES expr
    9     | expr . DIVIDE expr
   10     | expr . EQ expr
   11     | expr . NEQ expr
   12     | expr . GT expr
   13     | expr . LT expr
   14     | expr . LE expr
   15     | expr . GE expr
   16     | expr . AND expr
   17     | expr . OR expr
   23     | WHILE expr DO expr .

    OR      shift, and go to state 35
    AND     shift, and go to state 36
    GE      shift, and go to state 37
    GT      shift, and go to state 38
    LE      shift, and go to state 39
    LT      shift, and go to state 40
    NEQ     shift, and go to state 41
    EQ      shift, and go to state 42
    MINUS   shift, and go to state 43
    PLUS    shift, and go to state 44
    DIVIDE  shift, and go to state 45
    TIMES   shift, and go to state 46

    OR        [reduce using rule 23 (expr)]
    AND       [reduce using rule 23 (expr)]
    GE        [reduce using rule 23 (expr)]
    GT        [reduce using rule 23 (expr)]
    LE        [reduce using rule 23 (expr)]
    LT        [reduce using rule 23 (expr)]
    NEQ       [reduce using rule 23 (expr)]
    EQ        [reduce using rule 23 (expr)]
    MINUS     [reduce using rule 23 (expr)]
    PLUS      [reduce using rule 23 (expr)]
    DIVIDE    [reduce using rule 23 (expr)]
    TIMES     [reduce using rule 23 (expr)]
    $default  reduce using rule 23 (expr)


state 93

    6 expr: expr . PLUS expr
    7     | expr . MINUS expr
    8     | expr . TIMES expr
    9     | expr . DIVIDE expr
   10     | expr . EQ expr
   11     | expr . NEQ expr
   12     | expr . GT expr
   13     | expr . LT expr
   14     | expr . LE expr
   15     | expr . GE expr
   16     | expr . AND expr
   17     | expr . OR expr
   22     | FOR ID ASSIGN expr . TO expr DO expr

    TO      shift, and go to state 106
    OR      shift, and go to state 35
    AND     shift, and go to state 36
    GE      shift, and go to state 37
    GT      shift, and go to state 38
    LE      shift, and go to state 39
    LT      shift, and go to state 40
    NEQ     shift, and go to state 41
    EQ      shift, and go to state 42
    MINUS   shift, and go to state 43
    PLUS    shift, and go to state 44
    DIVIDE  shift, and go to state 45
    TIMES   shift, and go to state 46


state 94

   61 functionDeclaration: FUNCTION ID LPAREN . typeFields RPAREN COLON ID EQ expr
   62                    | FUNCTION ID LPAREN . RPAREN COLON ID EQ expr
   63                    | FUNCTION ID LPAREN . typeFields RPAREN EQ expr
   64                    | FUNCTION ID LPAREN . RPAREN EQ expr

    ID      shift, and go to state 107
    RPAREN  shift, and go to state 108

    typeField   go to state 109
    typeFields  go to state 110


state 95

   60 variableDeclaration: VAR ID COLON . ID ASSIGN expr

    ID  shift, and go to state 111


state 96

   59 variableDeclaration: VAR ID ASSIGN . expr

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11
    MINUS   shift, and go to state 12

    expr    go to state 112
    lValue  go to state 15


state 97

   51 typeDeclaration: TYPE ID EQ . type

    ID      shift, and go to state 113
    LBRACE  shift, and go to state 114
    ARRAY   shift, and go to state 115

    type  go to state 116


state 98

   30 expr: LET declarationList IN END .

    $default  reduce using rule 30 (expr)


state 99

   29 expr: LET declarationList IN exprSeq . END
   37 exprSeq: exprSeq . SEMICOLON expr

    SEMICOLON  shift, and go to state 58
    END        shift, and go to state 117


state 100

   35 array_expr: array_expr . LBRACK expr RBRACK
   45 lValue: lValue DOT ID array_expr .

    LBRACK  shift, and go to state 56

    $default  reduce using rule 45 (lValue)


state 101

    6 expr: expr . PLUS expr
    7     | expr . MINUS expr
    8     | expr . TIMES expr
    9     | expr . DIVIDE expr
   10     | expr . EQ expr
   11     | expr . NEQ expr
   12     | expr . GT expr
   13     | expr . LT expr
   14     | expr . LE expr
   15     | expr . GE expr
   16     | expr . AND expr
   17     | expr . OR expr
   39 exprList: exprList COMMA expr .

    OR      shift, and go to state 35
    AND     shift, and go to state 36
    GE      shift, and go to state 37
    GT      shift, and go to state 38
    LE      shift, and go to state 39
    LT      shift, and go to state 40
    NEQ     shift, and go to state 41
    EQ      shift, and go to state 42
    MINUS   shift, and go to state 43
    PLUS    shift, and go to state 44
    DIVIDE  shift, and go to state 45
    TIMES   shift, and go to state 46

    $default  reduce using rule 39 (exprList)


state 102

    6 expr: expr . PLUS expr
    7     | expr . MINUS expr
    8     | expr . TIMES expr
    9     | expr . DIVIDE expr
   10     | expr . EQ expr
   11     | expr . NEQ expr
   12     | expr . GT expr
   13     | expr . LT expr
   14     | expr . LE expr
   15     | expr . GE expr
   16     | expr . AND expr
   17     | expr . OR expr
   40 fieldList: ID EQ expr .

    OR      shift, and go to state 35
    AND     shift, and go to state 36
    GE      shift, and go to state 37
    GT      shift, and go to state 38
    LE      shift, and go to state 39
    LT      shift, and go to state 40
    NEQ     shift, and go to state 41
    EQ      shift, and go to state 42
    MINUS   shift, and go to state 43
    PLUS    shift, and go to state 44
    DIVIDE  shift, and go to state 45
    TIMES   shift, and go to state 46

    $default  reduce using rule 40 (fieldList)


state 103

   41 fieldList: fieldList COMMA ID . EQ expr

    EQ  shift, and go to state 118


state 104

   35 array_expr: array_expr LBRACK expr RBRACK .

    $default  reduce using rule 35 (array_expr)


state 105

   25 expr: IF expr THEN expr ELSE . expr

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11
    MINUS   shift, and go to state 12

    expr    go to state 119
    lValue  go to state 15


state 106

   22 expr: FOR ID ASSIGN expr TO . expr DO expr

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11
    MINUS   shift, and go to state 12

    expr    go to state 120
    lValue  go to state 15


state 107

   56 typeField: ID . COLON ID

    COLON  shift, and go to state 121


state 108

   62 functionDeclaration: FUNCTION ID LPAREN RPAREN . COLON ID EQ expr
   64                    | FUNCTION ID LPAREN RPAREN . EQ expr

    COLON  shift, and go to state 122
    EQ     shift, and go to state 123


state 109

   57 typeFields: typeField .

    $default  reduce using rule 57 (typeFields)


state 110

   58 typeFields: typeFields . COMMA typeField
   61 functionDeclaration: FUNCTION ID LPAREN typeFields . RPAREN COLON ID EQ expr
   63                    | FUNCTION ID LPAREN typeFields . RPAREN EQ expr

    COMMA   shift, and go to state 124
    RPAREN  shift, and go to state 125


state 111

   60 variableDeclaration: VAR ID COLON ID . ASSIGN expr

    ASSIGN  shift, and go to state 126


state 112

    6 expr: expr . PLUS expr
    7     | expr . MINUS expr
    8     | expr . TIMES expr
    9     | expr . DIVIDE expr
   10     | expr . EQ expr
   11     | expr . NEQ expr
   12     | expr . GT expr
   13     | expr . LT expr
   14     | expr . LE expr
   15     | expr . GE expr
   16     | expr . AND expr
   17     | expr . OR expr
   59 variableDeclaration: VAR ID ASSIGN expr .

    OR      shift, and go to state 35
    AND     shift, and go to state 36
    GE      shift, and go to state 37
    GT      shift, and go to state 38
    LE      shift, and go to state 39
    LT      shift, and go to state 40
    NEQ     shift, and go to state 41
    EQ      shift, and go to state 42
    MINUS   shift, and go to state 43
    PLUS    shift, and go to state 44
    DIVIDE  shift, and go to state 45
    TIMES   shift, and go to state 46

    $default  reduce using rule 59 (variableDeclaration)


state 113

   52 type: ID .

    $default  reduce using rule 52 (type)


state 114

   53 type: LBRACE . typeFields RBRACE
   54     | LBRACE . RBRACE

    ID      shift, and go to state 107
    RBRACE  shift, and go to state 127

    typeField   go to state 109
    typeFields  go to state 128


state 115

   55 type: ARRAY . OF ID

    OF  shift, and go to state 129


state 116

   51 typeDeclaration: TYPE ID EQ type .

    $default  reduce using rule 51 (typeDeclaration)


state 117

   29 expr: LET declarationList IN exprSeq END .

    $default  reduce using rule 29 (expr)


state 118

   41 fieldList: fieldList COMMA ID EQ . expr

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11
    MINUS   shift, and go to state 12

    expr    go to state 130
    lValue  go to state 15


state 119

    6 expr: expr . PLUS expr
    7     | expr . MINUS expr
    8     | expr . TIMES expr
    9     | expr . DIVIDE expr
   10     | expr . EQ expr
   11     | expr . NEQ expr
   12     | expr . GT expr
   13     | expr . LT expr
   14     | expr . LE expr
   15     | expr . GE expr
   16     | expr . AND expr
   17     | expr . OR expr
   25     | IF expr THEN expr ELSE expr .

    OR      shift, and go to state 35
    AND     shift, and go to state 36
    GE      shift, and go to state 37
    GT      shift, and go to state 38
    LE      shift, and go to state 39
    LT      shift, and go to state 40
    NEQ     shift, and go to state 41
    EQ      shift, and go to state 42
    MINUS   shift, and go to state 43
    PLUS    shift, and go to state 44
    DIVIDE  shift, and go to state 45
    TIMES   shift, and go to state 46

    OR        [reduce using rule 25 (expr)]
    AND       [reduce using rule 25 (expr)]
    GE        [reduce using rule 25 (expr)]
    GT        [reduce using rule 25 (expr)]
    LE        [reduce using rule 25 (expr)]
    LT        [reduce using rule 25 (expr)]
    NEQ       [reduce using rule 25 (expr)]
    EQ        [reduce using rule 25 (expr)]
    MINUS     [reduce using rule 25 (expr)]
    PLUS      [reduce using rule 25 (expr)]
    DIVIDE    [reduce using rule 25 (expr)]
    TIMES     [reduce using rule 25 (expr)]
    $default  reduce using rule 25 (expr)


state 120

    6 expr: expr . PLUS expr
    7     | expr . MINUS expr
    8     | expr . TIMES expr
    9     | expr . DIVIDE expr
   10     | expr . EQ expr
   11     | expr . NEQ expr
   12     | expr . GT expr
   13     | expr . LT expr
   14     | expr . LE expr
   15     | expr . GE expr
   16     | expr . AND expr
   17     | expr . OR expr
   22     | FOR ID ASSIGN expr TO expr . DO expr

    DO      shift, and go to state 131
    OR      shift, and go to state 35
    AND     shift, and go to state 36
    GE      shift, and go to state 37
    GT      shift, and go to state 38
    LE      shift, and go to state 39
    LT      shift, and go to state 40
    NEQ     shift, and go to state 41
    EQ      shift, and go to state 42
    MINUS   shift, and go to state 43
    PLUS    shift, and go to state 44
    DIVIDE  shift, and go to state 45
    TIMES   shift, and go to state 46


state 121

   56 typeField: ID COLON . ID

    ID  shift, and go to state 132


state 122

   62 functionDeclaration: FUNCTION ID LPAREN RPAREN COLON . ID EQ expr

    ID  shift, and go to state 133


state 123

   64 functionDeclaration: FUNCTION ID LPAREN RPAREN EQ . expr

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11
    MINUS   shift, and go to state 12

    expr    go to state 134
    lValue  go to state 15


state 124

   58 typeFields: typeFields COMMA . typeField

    ID  shift, and go to state 107

    typeField  go to state 135


state 125

   61 functionDeclaration: FUNCTION ID LPAREN typeFields RPAREN . COLON ID EQ expr
   63                    | FUNCTION ID LPAREN typeFields RPAREN . EQ expr

    COLON  shift, and go to state 136
    EQ     shift, and go to state 137


state 126

   60 variableDeclaration: VAR ID COLON ID ASSIGN . expr

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11
    MINUS   shift, and go to state 12

    expr    go to state 138
    lValue  go to state 15


state 127

   54 type: LBRACE RBRACE .

    $default  reduce using rule 54 (type)


state 128

   53 type: LBRACE typeFields . RBRACE
   58 typeFields: typeFields . COMMA typeField

    COMMA   shift, and go to state 124
    RBRACE  shift, and go to state 139


state 129

   55 type: ARRAY OF . ID

    ID  shift, and go to state 140


state 130

    6 expr: expr . PLUS expr
    7     | expr . MINUS expr
    8     | expr . TIMES expr
    9     | expr . DIVIDE expr
   10     | expr . EQ expr
   11     | expr . NEQ expr
   12     | expr . GT expr
   13     | expr . LT expr
   14     | expr . LE expr
   15     | expr . GE expr
   16     | expr . AND expr
   17     | expr . OR expr
   41 fieldList: fieldList COMMA ID EQ expr .

    OR      shift, and go to state 35
    AND     shift, and go to state 36
    GE      shift, and go to state 37
    GT      shift, and go to state 38
    LE      shift, and go to state 39
    LT      shift, and go to state 40
    NEQ     shift, and go to state 41
    EQ      shift, and go to state 42
    MINUS   shift, and go to state 43
    PLUS    shift, and go to state 44
    DIVIDE  shift, and go to state 45
    TIMES   shift, and go to state 46

    $default  reduce using rule 41 (fieldList)


state 131

   22 expr: FOR ID ASSIGN expr TO expr DO . expr

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11
    MINUS   shift, and go to state 12

    expr    go to state 141
    lValue  go to state 15


state 132

   56 typeField: ID COLON ID .

    $default  reduce using rule 56 (typeField)


state 133

   62 functionDeclaration: FUNCTION ID LPAREN RPAREN COLON ID . EQ expr

    EQ  shift, and go to state 142


state 134

    6 expr: expr . PLUS expr
    7     | expr . MINUS expr
    8     | expr . TIMES expr
    9     | expr . DIVIDE expr
   10     | expr . EQ expr
   11     | expr . NEQ expr
   12     | expr . GT expr
   13     | expr . LT expr
   14     | expr . LE expr
   15     | expr . GE expr
   16     | expr . AND expr
   17     | expr . OR expr
   64 functionDeclaration: FUNCTION ID LPAREN RPAREN EQ expr .

    OR      shift, and go to state 35
    AND     shift, and go to state 36
    GE      shift, and go to state 37
    GT      shift, and go to state 38
    LE      shift, and go to state 39
    LT      shift, and go to state 40
    NEQ     shift, and go to state 41
    EQ      shift, and go to state 42
    MINUS   shift, and go to state 43
    PLUS    shift, and go to state 44
    DIVIDE  shift, and go to state 45
    TIMES   shift, and go to state 46

    $default  reduce using rule 64 (functionDeclaration)


state 135

   58 typeFields: typeFields COMMA typeField .

    $default  reduce using rule 58 (typeFields)


state 136

   61 functionDeclaration: FUNCTION ID LPAREN typeFields RPAREN COLON . ID EQ expr

    ID  shift, and go to state 143


state 137

   63 functionDeclaration: FUNCTION ID LPAREN typeFields RPAREN EQ . expr

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11
    MINUS   shift, and go to state 12

    expr    go to state 144
    lValue  go to state 15


state 138

    6 expr: expr . PLUS expr
    7     | expr . MINUS expr
    8     | expr . TIMES expr
    9     | expr . DIVIDE expr
   10     | expr . EQ expr
   11     | expr . NEQ expr
   12     | expr . GT expr
   13     | expr . LT expr
   14     | expr . LE expr
   15     | expr . GE expr
   16     | expr . AND expr
   17     | expr . OR expr
   60 variableDeclaration: VAR ID COLON ID ASSIGN expr .

    OR      shift, and go to state 35
    AND     shift, and go to state 36
    GE      shift, and go to state 37
    GT      shift, and go to state 38
    LE      shift, and go to state 39
    LT      shift, and go to state 40
    NEQ     shift, and go to state 41
    EQ      shift, and go to state 42
    MINUS   shift, and go to state 43
    PLUS    shift, and go to state 44
    DIVIDE  shift, and go to state 45
    TIMES   shift, and go to state 46

    $default  reduce using rule 60 (variableDeclaration)


state 139

   53 type: LBRACE typeFields RBRACE .

    $default  reduce using rule 53 (type)


state 140

   55 type: ARRAY OF ID .

    $default  reduce using rule 55 (type)


state 141

    6 expr: expr . PLUS expr
    7     | expr . MINUS expr
    8     | expr . TIMES expr
    9     | expr . DIVIDE expr
   10     | expr . EQ expr
   11     | expr . NEQ expr
   12     | expr . GT expr
   13     | expr . LT expr
   14     | expr . LE expr
   15     | expr . GE expr
   16     | expr . AND expr
   17     | expr . OR expr
   22     | FOR ID ASSIGN expr TO expr DO expr .

    OR      shift, and go to state 35
    AND     shift, and go to state 36
    GE      shift, and go to state 37
    GT      shift, and go to state 38
    LE      shift, and go to state 39
    LT      shift, and go to state 40
    NEQ     shift, and go to state 41
    EQ      shift, and go to state 42
    MINUS   shift, and go to state 43
    PLUS    shift, and go to state 44
    DIVIDE  shift, and go to state 45
    TIMES   shift, and go to state 46

    OR        [reduce using rule 22 (expr)]
    AND       [reduce using rule 22 (expr)]
    GE        [reduce using rule 22 (expr)]
    GT        [reduce using rule 22 (expr)]
    LE        [reduce using rule 22 (expr)]
    LT        [reduce using rule 22 (expr)]
    NEQ       [reduce using rule 22 (expr)]
    EQ        [reduce using rule 22 (expr)]
    MINUS     [reduce using rule 22 (expr)]
    PLUS      [reduce using rule 22 (expr)]
    DIVIDE    [reduce using rule 22 (expr)]
    TIMES     [reduce using rule 22 (expr)]
    $default  reduce using rule 22 (expr)


state 142

   62 functionDeclaration: FUNCTION ID LPAREN RPAREN COLON ID EQ . expr

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11
    MINUS   shift, and go to state 12

    expr    go to state 145
    lValue  go to state 15


state 143

   61 functionDeclaration: FUNCTION ID LPAREN typeFields RPAREN COLON ID . EQ expr

    EQ  shift, and go to state 146


state 144

    6 expr: expr . PLUS expr
    7     | expr . MINUS expr
    8     | expr . TIMES expr
    9     | expr . DIVIDE expr
   10     | expr . EQ expr
   11     | expr . NEQ expr
   12     | expr . GT expr
   13     | expr . LT expr
   14     | expr . LE expr
   15     | expr . GE expr
   16     | expr . AND expr
   17     | expr . OR expr
   63 functionDeclaration: FUNCTION ID LPAREN typeFields RPAREN EQ expr .

    OR      shift, and go to state 35
    AND     shift, and go to state 36
    GE      shift, and go to state 37
    GT      shift, and go to state 38
    LE      shift, and go to state 39
    LT      shift, and go to state 40
    NEQ     shift, and go to state 41
    EQ      shift, and go to state 42
    MINUS   shift, and go to state 43
    PLUS    shift, and go to state 44
    DIVIDE  shift, and go to state 45
    TIMES   shift, and go to state 46

    $default  reduce using rule 63 (functionDeclaration)


state 145

    6 expr: expr . PLUS expr
    7     | expr . MINUS expr
    8     | expr . TIMES expr
    9     | expr . DIVIDE expr
   10     | expr . EQ expr
   11     | expr . NEQ expr
   12     | expr . GT expr
   13     | expr . LT expr
   14     | expr . LE expr
   15     | expr . GE expr
   16     | expr . AND expr
   17     | expr . OR expr
   62 functionDeclaration: FUNCTION ID LPAREN RPAREN COLON ID EQ expr .

    OR      shift, and go to state 35
    AND     shift, and go to state 36
    GE      shift, and go to state 37
    GT      shift, and go to state 38
    LE      shift, and go to state 39
    LT      shift, and go to state 40
    NEQ     shift, and go to state 41
    EQ      shift, and go to state 42
    MINUS   shift, and go to state 43
    PLUS    shift, and go to state 44
    DIVIDE  shift, and go to state 45
    TIMES   shift, and go to state 46

    $default  reduce using rule 62 (functionDeclaration)


state 146

   61 functionDeclaration: FUNCTION ID LPAREN typeFields RPAREN COLON ID EQ . expr

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11
    MINUS   shift, and go to state 12

    expr    go to state 147
    lValue  go to state 15


state 147

    6 expr: expr . PLUS expr
    7     | expr . MINUS expr
    8     | expr . TIMES expr
    9     | expr . DIVIDE expr
   10     | expr . EQ expr
   11     | expr . NEQ expr
   12     | expr . GT expr
   13     | expr . LT expr
   14     | expr . LE expr
   15     | expr . GE expr
   16     | expr . AND expr
   17     | expr . OR expr
   61 functionDeclaration: FUNCTION ID LPAREN typeFields RPAREN COLON ID EQ expr .

    OR      shift, and go to state 35
    AND     shift, and go to state 36
    GE      shift, and go to state 37
    GT      shift, and go to state 38
    LE      shift, and go to state 39
    LT      shift, and go to state 40
    NEQ     shift, and go to state 41
    EQ      shift, and go to state 42
    MINUS   shift, and go to state 43
    PLUS    shift, and go to state 44
    DIVIDE  shift, and go to state 45
    TIMES   shift, and go to state 46

    $default  reduce using rule 61 (functionDeclaration)
