Terminals unused in grammar

   LBRACE
   RBRACE
   DOT
   FUNCTION


State 60 conflicts: 1 shift/reduce
State 78 conflicts: 13 shift/reduce
State 79 conflicts: 12 shift/reduce
State 97 conflicts: 12 shift/reduce
State 98 conflicts: 12 shift/reduce
State 105 conflicts: 12 shift/reduce


Grammar

    0 $accept: program $end

    1 program: exp
    2        | /* empty */

    3 decs: /* empty */
    4     | t_decs

    5 t_decs: dec t_decs
    6       | dec
    7       | t_decs error

    8 dec: typedec
    9    | vardec

   10 typedec: TYPE ID EQ tpinfo
   11        | TYPE error EQ tpinfo

   12 tpinfo: ID
   13       | ARRAY OF ID

   14 vardec: VAR ID ASSIGN exp
   15       | VAR ID COLON ID ASSIGN exp

   16 lvalue: ID

   17 exp: lvalue
   18    | exp PLUS exp
   19    | exp MINUS exp
   20    | exp TIMES exp
   21    | exp DIVIDE exp
   22    | MINUS exp
   23    | expseq
   24    | INT
   25    | STRING
   26    | ID LPAREN paramlist RPAREN
   27    | exp EQ exp
   28    | exp NEQ exp
   29    | exp LT exp
   30    | exp LE exp
   31    | exp GT exp
   32    | exp GE exp
   33    | exp AND exp
   34    | exp OR exp
   35    | ID LBRACK exp RBRACK OF exp
   36    | lvalue ASSIGN exp
   37    | IF exp THEN exp ELSE exp
   38    | IF exp THEN exp
   39    | WHILE exp DO exp
   40    | FOR ID ASSIGN exp TO exp DO exp
   41    | BREAK
   42    | LET decs IN explist END
   43    | NIL

   44 expseq: LPAREN explist RPAREN

   45 explist: /* empty */
   46        | t_explist

   47 t_explist: exp
   48          | exp SEMICOLON t_explist

   49 paramlist: /* empty */
   50          | t_paramlist

   51 t_paramlist: exp
   52            | exp COMMA t_paramlist


Terminals, with rules where they appear

$end (0) 0
error (256) 7 11
ID (258) 10 12 13 14 15 16 26 35 40
STRING (259) 25
INT (260) 24
COMMA (261) 52
COLON (262) 15
SEMICOLON (263) 48
LPAREN (264) 26 44
RPAREN (265) 26 44
LBRACK (266) 35
RBRACK (267) 35
LBRACE (268)
RBRACE (269)
DOT (270)
ARRAY (271) 13
IF (272) 37 38
THEN (273) 37 38
ELSE (274) 37
WHILE (275) 39
FOR (276) 40
TO (277) 40
DO (278) 39 40
LET (279) 42
IN (280) 42
END (281) 42
OF (282) 13 35
BREAK (283) 41
NIL (284) 43
FUNCTION (285)
VAR (286) 14 15
TYPE (287) 10 11
ASSIGN (288) 14 15 36 40
OR (289) 34
AND (290) 33
GE (291) 32
GT (292) 31
LE (293) 30
LT (294) 29
NEQ (295) 28
EQ (296) 10 11 27
MINUS (297) 19 22
PLUS (298) 18
DIVIDE (299) 21
TIMES (300) 20
UMINUS (301)


Nonterminals, with rules where they appear

$accept (47)
    on left: 0
program (48)
    on left: 1 2, on right: 0
decs (49)
    on left: 3 4, on right: 42
t_decs (50)
    on left: 5 6 7, on right: 4 5 7
dec (51)
    on left: 8 9, on right: 5 6
typedec (52)
    on left: 10 11, on right: 8
tpinfo (53)
    on left: 12 13, on right: 10 11
vardec (54)
    on left: 14 15, on right: 9
lvalue (55)
    on left: 16, on right: 17 36
exp (56)
    on left: 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34
    35 36 37 38 39 40 41 42 43, on right: 1 14 15 18 19 20 21 22 27
    28 29 30 31 32 33 34 35 36 37 38 39 40 47 48 51 52
expseq (57)
    on left: 44, on right: 23
explist (58)
    on left: 45 46, on right: 42 44
t_explist (59)
    on left: 47 48, on right: 46 48
paramlist (60)
    on left: 49 50, on right: 26
t_paramlist (61)
    on left: 51 52, on right: 50 52


state 0

    0 $accept: . program $end

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    MINUS   shift, and go to state 11

    $default  reduce using rule 2 (program)

    program  go to state 12
    lvalue   go to state 13
    exp      go to state 14
    expseq   go to state 15


state 1

   16 lvalue: ID .
   26 exp: ID . LPAREN paramlist RPAREN
   35    | ID . LBRACK exp RBRACK OF exp

    LPAREN  shift, and go to state 16
    LBRACK  shift, and go to state 17

    $default  reduce using rule 16 (lvalue)


state 2

   25 exp: STRING .

    $default  reduce using rule 25 (exp)


state 3

   24 exp: INT .

    $default  reduce using rule 24 (exp)


state 4

   44 expseq: LPAREN . explist RPAREN

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    MINUS   shift, and go to state 11

    $default  reduce using rule 45 (explist)

    lvalue     go to state 13
    exp        go to state 18
    expseq     go to state 15
    explist    go to state 19
    t_explist  go to state 20


state 5

   37 exp: IF . exp THEN exp ELSE exp
   38    | IF . exp THEN exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    MINUS   shift, and go to state 11

    lvalue  go to state 13
    exp     go to state 21
    expseq  go to state 15


state 6

   39 exp: WHILE . exp DO exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    MINUS   shift, and go to state 11

    lvalue  go to state 13
    exp     go to state 22
    expseq  go to state 15


state 7

   40 exp: FOR . ID ASSIGN exp TO exp DO exp

    ID  shift, and go to state 23


state 8

   42 exp: LET . decs IN explist END

    VAR   shift, and go to state 24
    TYPE  shift, and go to state 25

    $default  reduce using rule 3 (decs)

    decs     go to state 26
    t_decs   go to state 27
    dec      go to state 28
    typedec  go to state 29
    vardec   go to state 30


state 9

   41 exp: BREAK .

    $default  reduce using rule 41 (exp)


state 10

   43 exp: NIL .

    $default  reduce using rule 43 (exp)


state 11

   22 exp: MINUS . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    MINUS   shift, and go to state 11

    lvalue  go to state 13
    exp     go to state 31
    expseq  go to state 15


state 12

    0 $accept: program . $end

    $end  shift, and go to state 32


state 13

   17 exp: lvalue .
   36    | lvalue . ASSIGN exp

    ASSIGN  shift, and go to state 33

    $default  reduce using rule 17 (exp)


state 14

    1 program: exp .
   18 exp: exp . PLUS exp
   19    | exp . MINUS exp
   20    | exp . TIMES exp
   21    | exp . DIVIDE exp
   27    | exp . EQ exp
   28    | exp . NEQ exp
   29    | exp . LT exp
   30    | exp . LE exp
   31    | exp . GT exp
   32    | exp . GE exp
   33    | exp . AND exp
   34    | exp . OR exp

    OR      shift, and go to state 34
    AND     shift, and go to state 35
    GE      shift, and go to state 36
    GT      shift, and go to state 37
    LE      shift, and go to state 38
    LT      shift, and go to state 39
    NEQ     shift, and go to state 40
    EQ      shift, and go to state 41
    MINUS   shift, and go to state 42
    PLUS    shift, and go to state 43
    DIVIDE  shift, and go to state 44
    TIMES   shift, and go to state 45

    $default  reduce using rule 1 (program)


state 15

   23 exp: expseq .

    $default  reduce using rule 23 (exp)


state 16

   26 exp: ID LPAREN . paramlist RPAREN

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    MINUS   shift, and go to state 11

    $default  reduce using rule 49 (paramlist)

    lvalue       go to state 13
    exp          go to state 46
    expseq       go to state 15
    paramlist    go to state 47
    t_paramlist  go to state 48


state 17

   35 exp: ID LBRACK . exp RBRACK OF exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    MINUS   shift, and go to state 11

    lvalue  go to state 13
    exp     go to state 49
    expseq  go to state 15


state 18

   18 exp: exp . PLUS exp
   19    | exp . MINUS exp
   20    | exp . TIMES exp
   21    | exp . DIVIDE exp
   27    | exp . EQ exp
   28    | exp . NEQ exp
   29    | exp . LT exp
   30    | exp . LE exp
   31    | exp . GT exp
   32    | exp . GE exp
   33    | exp . AND exp
   34    | exp . OR exp
   47 t_explist: exp .
   48          | exp . SEMICOLON t_explist

    SEMICOLON  shift, and go to state 50
    OR         shift, and go to state 34
    AND        shift, and go to state 35
    GE         shift, and go to state 36
    GT         shift, and go to state 37
    LE         shift, and go to state 38
    LT         shift, and go to state 39
    NEQ        shift, and go to state 40
    EQ         shift, and go to state 41
    MINUS      shift, and go to state 42
    PLUS       shift, and go to state 43
    DIVIDE     shift, and go to state 44
    TIMES      shift, and go to state 45

    $default  reduce using rule 47 (t_explist)


state 19

   44 expseq: LPAREN explist . RPAREN

    RPAREN  shift, and go to state 51


state 20

   46 explist: t_explist .

    $default  reduce using rule 46 (explist)


state 21

   18 exp: exp . PLUS exp
   19    | exp . MINUS exp
   20    | exp . TIMES exp
   21    | exp . DIVIDE exp
   27    | exp . EQ exp
   28    | exp . NEQ exp
   29    | exp . LT exp
   30    | exp . LE exp
   31    | exp . GT exp
   32    | exp . GE exp
   33    | exp . AND exp
   34    | exp . OR exp
   37    | IF exp . THEN exp ELSE exp
   38    | IF exp . THEN exp

    THEN    shift, and go to state 52
    OR      shift, and go to state 34
    AND     shift, and go to state 35
    GE      shift, and go to state 36
    GT      shift, and go to state 37
    LE      shift, and go to state 38
    LT      shift, and go to state 39
    NEQ     shift, and go to state 40
    EQ      shift, and go to state 41
    MINUS   shift, and go to state 42
    PLUS    shift, and go to state 43
    DIVIDE  shift, and go to state 44
    TIMES   shift, and go to state 45


state 22

   18 exp: exp . PLUS exp
   19    | exp . MINUS exp
   20    | exp . TIMES exp
   21    | exp . DIVIDE exp
   27    | exp . EQ exp
   28    | exp . NEQ exp
   29    | exp . LT exp
   30    | exp . LE exp
   31    | exp . GT exp
   32    | exp . GE exp
   33    | exp . AND exp
   34    | exp . OR exp
   39    | WHILE exp . DO exp

    DO      shift, and go to state 53
    OR      shift, and go to state 34
    AND     shift, and go to state 35
    GE      shift, and go to state 36
    GT      shift, and go to state 37
    LE      shift, and go to state 38
    LT      shift, and go to state 39
    NEQ     shift, and go to state 40
    EQ      shift, and go to state 41
    MINUS   shift, and go to state 42
    PLUS    shift, and go to state 43
    DIVIDE  shift, and go to state 44
    TIMES   shift, and go to state 45


state 23

   40 exp: FOR ID . ASSIGN exp TO exp DO exp

    ASSIGN  shift, and go to state 54


state 24

   14 vardec: VAR . ID ASSIGN exp
   15       | VAR . ID COLON ID ASSIGN exp

    ID  shift, and go to state 55


state 25

   10 typedec: TYPE . ID EQ tpinfo
   11        | TYPE . error EQ tpinfo

    error  shift, and go to state 56
    ID     shift, and go to state 57


state 26

   42 exp: LET decs . IN explist END

    IN  shift, and go to state 58


state 27

    4 decs: t_decs .
    7 t_decs: t_decs . error

    error  shift, and go to state 59

    IN  reduce using rule 4 (decs)


state 28

    5 t_decs: dec . t_decs
    6       | dec .

    VAR   shift, and go to state 24
    TYPE  shift, and go to state 25

    $default  reduce using rule 6 (t_decs)

    t_decs   go to state 60
    dec      go to state 28
    typedec  go to state 29
    vardec   go to state 30


state 29

    8 dec: typedec .

    $default  reduce using rule 8 (dec)


state 30

    9 dec: vardec .

    $default  reduce using rule 9 (dec)


state 31

   18 exp: exp . PLUS exp
   19    | exp . MINUS exp
   20    | exp . TIMES exp
   21    | exp . DIVIDE exp
   22    | MINUS exp .
   27    | exp . EQ exp
   28    | exp . NEQ exp
   29    | exp . LT exp
   30    | exp . LE exp
   31    | exp . GT exp
   32    | exp . GE exp
   33    | exp . AND exp
   34    | exp . OR exp

    $default  reduce using rule 22 (exp)


state 32

    0 $accept: program $end .

    $default  accept


state 33

   36 exp: lvalue ASSIGN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    MINUS   shift, and go to state 11

    lvalue  go to state 13
    exp     go to state 61
    expseq  go to state 15


state 34

   34 exp: exp OR . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    MINUS   shift, and go to state 11

    lvalue  go to state 13
    exp     go to state 62
    expseq  go to state 15


state 35

   33 exp: exp AND . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    MINUS   shift, and go to state 11

    lvalue  go to state 13
    exp     go to state 63
    expseq  go to state 15


state 36

   32 exp: exp GE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    MINUS   shift, and go to state 11

    lvalue  go to state 13
    exp     go to state 64
    expseq  go to state 15


state 37

   31 exp: exp GT . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    MINUS   shift, and go to state 11

    lvalue  go to state 13
    exp     go to state 65
    expseq  go to state 15


state 38

   30 exp: exp LE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    MINUS   shift, and go to state 11

    lvalue  go to state 13
    exp     go to state 66
    expseq  go to state 15


state 39

   29 exp: exp LT . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    MINUS   shift, and go to state 11

    lvalue  go to state 13
    exp     go to state 67
    expseq  go to state 15


state 40

   28 exp: exp NEQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    MINUS   shift, and go to state 11

    lvalue  go to state 13
    exp     go to state 68
    expseq  go to state 15


state 41

   27 exp: exp EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    MINUS   shift, and go to state 11

    lvalue  go to state 13
    exp     go to state 69
    expseq  go to state 15


state 42

   19 exp: exp MINUS . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    MINUS   shift, and go to state 11

    lvalue  go to state 13
    exp     go to state 70
    expseq  go to state 15


state 43

   18 exp: exp PLUS . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    MINUS   shift, and go to state 11

    lvalue  go to state 13
    exp     go to state 71
    expseq  go to state 15


state 44

   21 exp: exp DIVIDE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    MINUS   shift, and go to state 11

    lvalue  go to state 13
    exp     go to state 72
    expseq  go to state 15


state 45

   20 exp: exp TIMES . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    MINUS   shift, and go to state 11

    lvalue  go to state 13
    exp     go to state 73
    expseq  go to state 15


state 46

   18 exp: exp . PLUS exp
   19    | exp . MINUS exp
   20    | exp . TIMES exp
   21    | exp . DIVIDE exp
   27    | exp . EQ exp
   28    | exp . NEQ exp
   29    | exp . LT exp
   30    | exp . LE exp
   31    | exp . GT exp
   32    | exp . GE exp
   33    | exp . AND exp
   34    | exp . OR exp
   51 t_paramlist: exp .
   52            | exp . COMMA t_paramlist

    COMMA   shift, and go to state 74
    OR      shift, and go to state 34
    AND     shift, and go to state 35
    GE      shift, and go to state 36
    GT      shift, and go to state 37
    LE      shift, and go to state 38
    LT      shift, and go to state 39
    NEQ     shift, and go to state 40
    EQ      shift, and go to state 41
    MINUS   shift, and go to state 42
    PLUS    shift, and go to state 43
    DIVIDE  shift, and go to state 44
    TIMES   shift, and go to state 45

    $default  reduce using rule 51 (t_paramlist)


state 47

   26 exp: ID LPAREN paramlist . RPAREN

    RPAREN  shift, and go to state 75


state 48

   50 paramlist: t_paramlist .

    $default  reduce using rule 50 (paramlist)


state 49

   18 exp: exp . PLUS exp
   19    | exp . MINUS exp
   20    | exp . TIMES exp
   21    | exp . DIVIDE exp
   27    | exp . EQ exp
   28    | exp . NEQ exp
   29    | exp . LT exp
   30    | exp . LE exp
   31    | exp . GT exp
   32    | exp . GE exp
   33    | exp . AND exp
   34    | exp . OR exp
   35    | ID LBRACK exp . RBRACK OF exp

    RBRACK  shift, and go to state 76
    OR      shift, and go to state 34
    AND     shift, and go to state 35
    GE      shift, and go to state 36
    GT      shift, and go to state 37
    LE      shift, and go to state 38
    LT      shift, and go to state 39
    NEQ     shift, and go to state 40
    EQ      shift, and go to state 41
    MINUS   shift, and go to state 42
    PLUS    shift, and go to state 43
    DIVIDE  shift, and go to state 44
    TIMES   shift, and go to state 45


state 50

   48 t_explist: exp SEMICOLON . t_explist

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    MINUS   shift, and go to state 11

    lvalue     go to state 13
    exp        go to state 18
    expseq     go to state 15
    t_explist  go to state 77


state 51

   44 expseq: LPAREN explist RPAREN .

    $default  reduce using rule 44 (expseq)


state 52

   37 exp: IF exp THEN . exp ELSE exp
   38    | IF exp THEN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    MINUS   shift, and go to state 11

    lvalue  go to state 13
    exp     go to state 78
    expseq  go to state 15


state 53

   39 exp: WHILE exp DO . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    MINUS   shift, and go to state 11

    lvalue  go to state 13
    exp     go to state 79
    expseq  go to state 15


state 54

   40 exp: FOR ID ASSIGN . exp TO exp DO exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    MINUS   shift, and go to state 11

    lvalue  go to state 13
    exp     go to state 80
    expseq  go to state 15


state 55

   14 vardec: VAR ID . ASSIGN exp
   15       | VAR ID . COLON ID ASSIGN exp

    COLON   shift, and go to state 81
    ASSIGN  shift, and go to state 82


state 56

   11 typedec: TYPE error . EQ tpinfo

    EQ  shift, and go to state 83


state 57

   10 typedec: TYPE ID . EQ tpinfo

    EQ  shift, and go to state 84


state 58

   42 exp: LET decs IN . explist END

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    MINUS   shift, and go to state 11

    $default  reduce using rule 45 (explist)

    lvalue     go to state 13
    exp        go to state 18
    expseq     go to state 15
    explist    go to state 85
    t_explist  go to state 20


state 59

    7 t_decs: t_decs error .

    $default  reduce using rule 7 (t_decs)


state 60

    5 t_decs: dec t_decs .
    7       | t_decs . error

    error  shift, and go to state 59

    error  [reduce using rule 5 (t_decs)]
    IN     reduce using rule 5 (t_decs)


state 61

   18 exp: exp . PLUS exp
   19    | exp . MINUS exp
   20    | exp . TIMES exp
   21    | exp . DIVIDE exp
   27    | exp . EQ exp
   28    | exp . NEQ exp
   29    | exp . LT exp
   30    | exp . LE exp
   31    | exp . GT exp
   32    | exp . GE exp
   33    | exp . AND exp
   34    | exp . OR exp
   36    | lvalue ASSIGN exp .

    OR      shift, and go to state 34
    AND     shift, and go to state 35
    GE      shift, and go to state 36
    GT      shift, and go to state 37
    LE      shift, and go to state 38
    LT      shift, and go to state 39
    NEQ     shift, and go to state 40
    EQ      shift, and go to state 41
    MINUS   shift, and go to state 42
    PLUS    shift, and go to state 43
    DIVIDE  shift, and go to state 44
    TIMES   shift, and go to state 45

    $default  reduce using rule 36 (exp)


state 62

   18 exp: exp . PLUS exp
   19    | exp . MINUS exp
   20    | exp . TIMES exp
   21    | exp . DIVIDE exp
   27    | exp . EQ exp
   28    | exp . NEQ exp
   29    | exp . LT exp
   30    | exp . LE exp
   31    | exp . GT exp
   32    | exp . GE exp
   33    | exp . AND exp
   34    | exp . OR exp
   34    | exp OR exp .

    AND     shift, and go to state 35
    GE      shift, and go to state 36
    GT      shift, and go to state 37
    LE      shift, and go to state 38
    LT      shift, and go to state 39
    NEQ     shift, and go to state 40
    EQ      shift, and go to state 41
    MINUS   shift, and go to state 42
    PLUS    shift, and go to state 43
    DIVIDE  shift, and go to state 44
    TIMES   shift, and go to state 45

    $default  reduce using rule 34 (exp)


state 63

   18 exp: exp . PLUS exp
   19    | exp . MINUS exp
   20    | exp . TIMES exp
   21    | exp . DIVIDE exp
   27    | exp . EQ exp
   28    | exp . NEQ exp
   29    | exp . LT exp
   30    | exp . LE exp
   31    | exp . GT exp
   32    | exp . GE exp
   33    | exp . AND exp
   33    | exp AND exp .
   34    | exp . OR exp

    GE      shift, and go to state 36
    GT      shift, and go to state 37
    LE      shift, and go to state 38
    LT      shift, and go to state 39
    NEQ     shift, and go to state 40
    EQ      shift, and go to state 41
    MINUS   shift, and go to state 42
    PLUS    shift, and go to state 43
    DIVIDE  shift, and go to state 44
    TIMES   shift, and go to state 45

    $default  reduce using rule 33 (exp)


state 64

   18 exp: exp . PLUS exp
   19    | exp . MINUS exp
   20    | exp . TIMES exp
   21    | exp . DIVIDE exp
   27    | exp . EQ exp
   28    | exp . NEQ exp
   29    | exp . LT exp
   30    | exp . LE exp
   31    | exp . GT exp
   32    | exp . GE exp
   32    | exp GE exp .
   33    | exp . AND exp
   34    | exp . OR exp

    MINUS   shift, and go to state 42
    PLUS    shift, and go to state 43
    DIVIDE  shift, and go to state 44
    TIMES   shift, and go to state 45

    GE   error (nonassociative)
    GT   error (nonassociative)
    LE   error (nonassociative)
    LT   error (nonassociative)
    NEQ  error (nonassociative)
    EQ   error (nonassociative)

    $default  reduce using rule 32 (exp)


state 65

   18 exp: exp . PLUS exp
   19    | exp . MINUS exp
   20    | exp . TIMES exp
   21    | exp . DIVIDE exp
   27    | exp . EQ exp
   28    | exp . NEQ exp
   29    | exp . LT exp
   30    | exp . LE exp
   31    | exp . GT exp
   31    | exp GT exp .
   32    | exp . GE exp
   33    | exp . AND exp
   34    | exp . OR exp

    MINUS   shift, and go to state 42
    PLUS    shift, and go to state 43
    DIVIDE  shift, and go to state 44
    TIMES   shift, and go to state 45

    GE   error (nonassociative)
    GT   error (nonassociative)
    LE   error (nonassociative)
    LT   error (nonassociative)
    NEQ  error (nonassociative)
    EQ   error (nonassociative)

    $default  reduce using rule 31 (exp)


state 66

   18 exp: exp . PLUS exp
   19    | exp . MINUS exp
   20    | exp . TIMES exp
   21    | exp . DIVIDE exp
   27    | exp . EQ exp
   28    | exp . NEQ exp
   29    | exp . LT exp
   30    | exp . LE exp
   30    | exp LE exp .
   31    | exp . GT exp
   32    | exp . GE exp
   33    | exp . AND exp
   34    | exp . OR exp

    MINUS   shift, and go to state 42
    PLUS    shift, and go to state 43
    DIVIDE  shift, and go to state 44
    TIMES   shift, and go to state 45

    GE   error (nonassociative)
    GT   error (nonassociative)
    LE   error (nonassociative)
    LT   error (nonassociative)
    NEQ  error (nonassociative)
    EQ   error (nonassociative)

    $default  reduce using rule 30 (exp)


state 67

   18 exp: exp . PLUS exp
   19    | exp . MINUS exp
   20    | exp . TIMES exp
   21    | exp . DIVIDE exp
   27    | exp . EQ exp
   28    | exp . NEQ exp
   29    | exp . LT exp
   29    | exp LT exp .
   30    | exp . LE exp
   31    | exp . GT exp
   32    | exp . GE exp
   33    | exp . AND exp
   34    | exp . OR exp

    MINUS   shift, and go to state 42
    PLUS    shift, and go to state 43
    DIVIDE  shift, and go to state 44
    TIMES   shift, and go to state 45

    GE   error (nonassociative)
    GT   error (nonassociative)
    LE   error (nonassociative)
    LT   error (nonassociative)
    NEQ  error (nonassociative)
    EQ   error (nonassociative)

    $default  reduce using rule 29 (exp)


state 68

   18 exp: exp . PLUS exp
   19    | exp . MINUS exp
   20    | exp . TIMES exp
   21    | exp . DIVIDE exp
   27    | exp . EQ exp
   28    | exp . NEQ exp
   28    | exp NEQ exp .
   29    | exp . LT exp
   30    | exp . LE exp
   31    | exp . GT exp
   32    | exp . GE exp
   33    | exp . AND exp
   34    | exp . OR exp

    MINUS   shift, and go to state 42
    PLUS    shift, and go to state 43
    DIVIDE  shift, and go to state 44
    TIMES   shift, and go to state 45

    GE   error (nonassociative)
    GT   error (nonassociative)
    LE   error (nonassociative)
    LT   error (nonassociative)
    NEQ  error (nonassociative)
    EQ   error (nonassociative)

    $default  reduce using rule 28 (exp)


state 69

   18 exp: exp . PLUS exp
   19    | exp . MINUS exp
   20    | exp . TIMES exp
   21    | exp . DIVIDE exp
   27    | exp . EQ exp
   27    | exp EQ exp .
   28    | exp . NEQ exp
   29    | exp . LT exp
   30    | exp . LE exp
   31    | exp . GT exp
   32    | exp . GE exp
   33    | exp . AND exp
   34    | exp . OR exp

    MINUS   shift, and go to state 42
    PLUS    shift, and go to state 43
    DIVIDE  shift, and go to state 44
    TIMES   shift, and go to state 45

    GE   error (nonassociative)
    GT   error (nonassociative)
    LE   error (nonassociative)
    LT   error (nonassociative)
    NEQ  error (nonassociative)
    EQ   error (nonassociative)

    $default  reduce using rule 27 (exp)


state 70

   18 exp: exp . PLUS exp
   19    | exp . MINUS exp
   19    | exp MINUS exp .
   20    | exp . TIMES exp
   21    | exp . DIVIDE exp
   27    | exp . EQ exp
   28    | exp . NEQ exp
   29    | exp . LT exp
   30    | exp . LE exp
   31    | exp . GT exp
   32    | exp . GE exp
   33    | exp . AND exp
   34    | exp . OR exp

    DIVIDE  shift, and go to state 44
    TIMES   shift, and go to state 45

    $default  reduce using rule 19 (exp)


state 71

   18 exp: exp . PLUS exp
   18    | exp PLUS exp .
   19    | exp . MINUS exp
   20    | exp . TIMES exp
   21    | exp . DIVIDE exp
   27    | exp . EQ exp
   28    | exp . NEQ exp
   29    | exp . LT exp
   30    | exp . LE exp
   31    | exp . GT exp
   32    | exp . GE exp
   33    | exp . AND exp
   34    | exp . OR exp

    DIVIDE  shift, and go to state 44
    TIMES   shift, and go to state 45

    $default  reduce using rule 18 (exp)


state 72

   18 exp: exp . PLUS exp
   19    | exp . MINUS exp
   20    | exp . TIMES exp
   21    | exp . DIVIDE exp
   21    | exp DIVIDE exp .
   27    | exp . EQ exp
   28    | exp . NEQ exp
   29    | exp . LT exp
   30    | exp . LE exp
   31    | exp . GT exp
   32    | exp . GE exp
   33    | exp . AND exp
   34    | exp . OR exp

    $default  reduce using rule 21 (exp)


state 73

   18 exp: exp . PLUS exp
   19    | exp . MINUS exp
   20    | exp . TIMES exp
   20    | exp TIMES exp .
   21    | exp . DIVIDE exp
   27    | exp . EQ exp
   28    | exp . NEQ exp
   29    | exp . LT exp
   30    | exp . LE exp
   31    | exp . GT exp
   32    | exp . GE exp
   33    | exp . AND exp
   34    | exp . OR exp

    $default  reduce using rule 20 (exp)


state 74

   52 t_paramlist: exp COMMA . t_paramlist

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    MINUS   shift, and go to state 11

    lvalue       go to state 13
    exp          go to state 46
    expseq       go to state 15
    t_paramlist  go to state 86


state 75

   26 exp: ID LPAREN paramlist RPAREN .

    $default  reduce using rule 26 (exp)


state 76

   35 exp: ID LBRACK exp RBRACK . OF exp

    OF  shift, and go to state 87


state 77

   48 t_explist: exp SEMICOLON t_explist .

    $default  reduce using rule 48 (t_explist)


state 78

   18 exp: exp . PLUS exp
   19    | exp . MINUS exp
   20    | exp . TIMES exp
   21    | exp . DIVIDE exp
   27    | exp . EQ exp
   28    | exp . NEQ exp
   29    | exp . LT exp
   30    | exp . LE exp
   31    | exp . GT exp
   32    | exp . GE exp
   33    | exp . AND exp
   34    | exp . OR exp
   37    | IF exp THEN exp . ELSE exp
   38    | IF exp THEN exp .

    ELSE    shift, and go to state 88
    OR      shift, and go to state 34
    AND     shift, and go to state 35
    GE      shift, and go to state 36
    GT      shift, and go to state 37
    LE      shift, and go to state 38
    LT      shift, and go to state 39
    NEQ     shift, and go to state 40
    EQ      shift, and go to state 41
    MINUS   shift, and go to state 42
    PLUS    shift, and go to state 43
    DIVIDE  shift, and go to state 44
    TIMES   shift, and go to state 45

    ELSE      [reduce using rule 38 (exp)]
    OR        [reduce using rule 38 (exp)]
    AND       [reduce using rule 38 (exp)]
    GE        [reduce using rule 38 (exp)]
    GT        [reduce using rule 38 (exp)]
    LE        [reduce using rule 38 (exp)]
    LT        [reduce using rule 38 (exp)]
    NEQ       [reduce using rule 38 (exp)]
    EQ        [reduce using rule 38 (exp)]
    MINUS     [reduce using rule 38 (exp)]
    PLUS      [reduce using rule 38 (exp)]
    DIVIDE    [reduce using rule 38 (exp)]
    TIMES     [reduce using rule 38 (exp)]
    $default  reduce using rule 38 (exp)


state 79

   18 exp: exp . PLUS exp
   19    | exp . MINUS exp
   20    | exp . TIMES exp
   21    | exp . DIVIDE exp
   27    | exp . EQ exp
   28    | exp . NEQ exp
   29    | exp . LT exp
   30    | exp . LE exp
   31    | exp . GT exp
   32    | exp . GE exp
   33    | exp . AND exp
   34    | exp . OR exp
   39    | WHILE exp DO exp .

    OR      shift, and go to state 34
    AND     shift, and go to state 35
    GE      shift, and go to state 36
    GT      shift, and go to state 37
    LE      shift, and go to state 38
    LT      shift, and go to state 39
    NEQ     shift, and go to state 40
    EQ      shift, and go to state 41
    MINUS   shift, and go to state 42
    PLUS    shift, and go to state 43
    DIVIDE  shift, and go to state 44
    TIMES   shift, and go to state 45

    OR        [reduce using rule 39 (exp)]
    AND       [reduce using rule 39 (exp)]
    GE        [reduce using rule 39 (exp)]
    GT        [reduce using rule 39 (exp)]
    LE        [reduce using rule 39 (exp)]
    LT        [reduce using rule 39 (exp)]
    NEQ       [reduce using rule 39 (exp)]
    EQ        [reduce using rule 39 (exp)]
    MINUS     [reduce using rule 39 (exp)]
    PLUS      [reduce using rule 39 (exp)]
    DIVIDE    [reduce using rule 39 (exp)]
    TIMES     [reduce using rule 39 (exp)]
    $default  reduce using rule 39 (exp)


state 80

   18 exp: exp . PLUS exp
   19    | exp . MINUS exp
   20    | exp . TIMES exp
   21    | exp . DIVIDE exp
   27    | exp . EQ exp
   28    | exp . NEQ exp
   29    | exp . LT exp
   30    | exp . LE exp
   31    | exp . GT exp
   32    | exp . GE exp
   33    | exp . AND exp
   34    | exp . OR exp
   40    | FOR ID ASSIGN exp . TO exp DO exp

    TO      shift, and go to state 89
    OR      shift, and go to state 34
    AND     shift, and go to state 35
    GE      shift, and go to state 36
    GT      shift, and go to state 37
    LE      shift, and go to state 38
    LT      shift, and go to state 39
    NEQ     shift, and go to state 40
    EQ      shift, and go to state 41
    MINUS   shift, and go to state 42
    PLUS    shift, and go to state 43
    DIVIDE  shift, and go to state 44
    TIMES   shift, and go to state 45


state 81

   15 vardec: VAR ID COLON . ID ASSIGN exp

    ID  shift, and go to state 90


state 82

   14 vardec: VAR ID ASSIGN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    MINUS   shift, and go to state 11

    lvalue  go to state 13
    exp     go to state 91
    expseq  go to state 15


state 83

   11 typedec: TYPE error EQ . tpinfo

    ID     shift, and go to state 92
    ARRAY  shift, and go to state 93

    tpinfo  go to state 94


state 84

   10 typedec: TYPE ID EQ . tpinfo

    ID     shift, and go to state 92
    ARRAY  shift, and go to state 93

    tpinfo  go to state 95


state 85

   42 exp: LET decs IN explist . END

    END  shift, and go to state 96


state 86

   52 t_paramlist: exp COMMA t_paramlist .

    $default  reduce using rule 52 (t_paramlist)


state 87

   35 exp: ID LBRACK exp RBRACK OF . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    MINUS   shift, and go to state 11

    lvalue  go to state 13
    exp     go to state 97
    expseq  go to state 15


state 88

   37 exp: IF exp THEN exp ELSE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    MINUS   shift, and go to state 11

    lvalue  go to state 13
    exp     go to state 98
    expseq  go to state 15


state 89

   40 exp: FOR ID ASSIGN exp TO . exp DO exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    MINUS   shift, and go to state 11

    lvalue  go to state 13
    exp     go to state 99
    expseq  go to state 15


state 90

   15 vardec: VAR ID COLON ID . ASSIGN exp

    ASSIGN  shift, and go to state 100


state 91

   14 vardec: VAR ID ASSIGN exp .
   18 exp: exp . PLUS exp
   19    | exp . MINUS exp
   20    | exp . TIMES exp
   21    | exp . DIVIDE exp
   27    | exp . EQ exp
   28    | exp . NEQ exp
   29    | exp . LT exp
   30    | exp . LE exp
   31    | exp . GT exp
   32    | exp . GE exp
   33    | exp . AND exp
   34    | exp . OR exp

    OR      shift, and go to state 34
    AND     shift, and go to state 35
    GE      shift, and go to state 36
    GT      shift, and go to state 37
    LE      shift, and go to state 38
    LT      shift, and go to state 39
    NEQ     shift, and go to state 40
    EQ      shift, and go to state 41
    MINUS   shift, and go to state 42
    PLUS    shift, and go to state 43
    DIVIDE  shift, and go to state 44
    TIMES   shift, and go to state 45

    $default  reduce using rule 14 (vardec)


state 92

   12 tpinfo: ID .

    $default  reduce using rule 12 (tpinfo)


state 93

   13 tpinfo: ARRAY . OF ID

    OF  shift, and go to state 101


state 94

   11 typedec: TYPE error EQ tpinfo .

    $default  reduce using rule 11 (typedec)


state 95

   10 typedec: TYPE ID EQ tpinfo .

    $default  reduce using rule 10 (typedec)


state 96

   42 exp: LET decs IN explist END .

    $default  reduce using rule 42 (exp)


state 97

   18 exp: exp . PLUS exp
   19    | exp . MINUS exp
   20    | exp . TIMES exp
   21    | exp . DIVIDE exp
   27    | exp . EQ exp
   28    | exp . NEQ exp
   29    | exp . LT exp
   30    | exp . LE exp
   31    | exp . GT exp
   32    | exp . GE exp
   33    | exp . AND exp
   34    | exp . OR exp
   35    | ID LBRACK exp RBRACK OF exp .

    OR      shift, and go to state 34
    AND     shift, and go to state 35
    GE      shift, and go to state 36
    GT      shift, and go to state 37
    LE      shift, and go to state 38
    LT      shift, and go to state 39
    NEQ     shift, and go to state 40
    EQ      shift, and go to state 41
    MINUS   shift, and go to state 42
    PLUS    shift, and go to state 43
    DIVIDE  shift, and go to state 44
    TIMES   shift, and go to state 45

    OR        [reduce using rule 35 (exp)]
    AND       [reduce using rule 35 (exp)]
    GE        [reduce using rule 35 (exp)]
    GT        [reduce using rule 35 (exp)]
    LE        [reduce using rule 35 (exp)]
    LT        [reduce using rule 35 (exp)]
    NEQ       [reduce using rule 35 (exp)]
    EQ        [reduce using rule 35 (exp)]
    MINUS     [reduce using rule 35 (exp)]
    PLUS      [reduce using rule 35 (exp)]
    DIVIDE    [reduce using rule 35 (exp)]
    TIMES     [reduce using rule 35 (exp)]
    $default  reduce using rule 35 (exp)


state 98

   18 exp: exp . PLUS exp
   19    | exp . MINUS exp
   20    | exp . TIMES exp
   21    | exp . DIVIDE exp
   27    | exp . EQ exp
   28    | exp . NEQ exp
   29    | exp . LT exp
   30    | exp . LE exp
   31    | exp . GT exp
   32    | exp . GE exp
   33    | exp . AND exp
   34    | exp . OR exp
   37    | IF exp THEN exp ELSE exp .

    OR      shift, and go to state 34
    AND     shift, and go to state 35
    GE      shift, and go to state 36
    GT      shift, and go to state 37
    LE      shift, and go to state 38
    LT      shift, and go to state 39
    NEQ     shift, and go to state 40
    EQ      shift, and go to state 41
    MINUS   shift, and go to state 42
    PLUS    shift, and go to state 43
    DIVIDE  shift, and go to state 44
    TIMES   shift, and go to state 45

    OR        [reduce using rule 37 (exp)]
    AND       [reduce using rule 37 (exp)]
    GE        [reduce using rule 37 (exp)]
    GT        [reduce using rule 37 (exp)]
    LE        [reduce using rule 37 (exp)]
    LT        [reduce using rule 37 (exp)]
    NEQ       [reduce using rule 37 (exp)]
    EQ        [reduce using rule 37 (exp)]
    MINUS     [reduce using rule 37 (exp)]
    PLUS      [reduce using rule 37 (exp)]
    DIVIDE    [reduce using rule 37 (exp)]
    TIMES     [reduce using rule 37 (exp)]
    $default  reduce using rule 37 (exp)


state 99

   18 exp: exp . PLUS exp
   19    | exp . MINUS exp
   20    | exp . TIMES exp
   21    | exp . DIVIDE exp
   27    | exp . EQ exp
   28    | exp . NEQ exp
   29    | exp . LT exp
   30    | exp . LE exp
   31    | exp . GT exp
   32    | exp . GE exp
   33    | exp . AND exp
   34    | exp . OR exp
   40    | FOR ID ASSIGN exp TO exp . DO exp

    DO      shift, and go to state 102
    OR      shift, and go to state 34
    AND     shift, and go to state 35
    GE      shift, and go to state 36
    GT      shift, and go to state 37
    LE      shift, and go to state 38
    LT      shift, and go to state 39
    NEQ     shift, and go to state 40
    EQ      shift, and go to state 41
    MINUS   shift, and go to state 42
    PLUS    shift, and go to state 43
    DIVIDE  shift, and go to state 44
    TIMES   shift, and go to state 45


state 100

   15 vardec: VAR ID COLON ID ASSIGN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    MINUS   shift, and go to state 11

    lvalue  go to state 13
    exp     go to state 103
    expseq  go to state 15


state 101

   13 tpinfo: ARRAY OF . ID

    ID  shift, and go to state 104


state 102

   40 exp: FOR ID ASSIGN exp TO exp DO . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    MINUS   shift, and go to state 11

    lvalue  go to state 13
    exp     go to state 105
    expseq  go to state 15


state 103

   15 vardec: VAR ID COLON ID ASSIGN exp .
   18 exp: exp . PLUS exp
   19    | exp . MINUS exp
   20    | exp . TIMES exp
   21    | exp . DIVIDE exp
   27    | exp . EQ exp
   28    | exp . NEQ exp
   29    | exp . LT exp
   30    | exp . LE exp
   31    | exp . GT exp
   32    | exp . GE exp
   33    | exp . AND exp
   34    | exp . OR exp

    OR      shift, and go to state 34
    AND     shift, and go to state 35
    GE      shift, and go to state 36
    GT      shift, and go to state 37
    LE      shift, and go to state 38
    LT      shift, and go to state 39
    NEQ     shift, and go to state 40
    EQ      shift, and go to state 41
    MINUS   shift, and go to state 42
    PLUS    shift, and go to state 43
    DIVIDE  shift, and go to state 44
    TIMES   shift, and go to state 45

    $default  reduce using rule 15 (vardec)


state 104

   13 tpinfo: ARRAY OF ID .

    $default  reduce using rule 13 (tpinfo)


state 105

   18 exp: exp . PLUS exp
   19    | exp . MINUS exp
   20    | exp . TIMES exp
   21    | exp . DIVIDE exp
   27    | exp . EQ exp
   28    | exp . NEQ exp
   29    | exp . LT exp
   30    | exp . LE exp
   31    | exp . GT exp
   32    | exp . GE exp
   33    | exp . AND exp
   34    | exp . OR exp
   40    | FOR ID ASSIGN exp TO exp DO exp .

    OR      shift, and go to state 34
    AND     shift, and go to state 35
    GE      shift, and go to state 36
    GT      shift, and go to state 37
    LE      shift, and go to state 38
    LT      shift, and go to state 39
    NEQ     shift, and go to state 40
    EQ      shift, and go to state 41
    MINUS   shift, and go to state 42
    PLUS    shift, and go to state 43
    DIVIDE  shift, and go to state 44
    TIMES   shift, and go to state 45

    OR        [reduce using rule 40 (exp)]
    AND       [reduce using rule 40 (exp)]
    GE        [reduce using rule 40 (exp)]
    GT        [reduce using rule 40 (exp)]
    LE        [reduce using rule 40 (exp)]
    LT        [reduce using rule 40 (exp)]
    NEQ       [reduce using rule 40 (exp)]
    EQ        [reduce using rule 40 (exp)]
    MINUS     [reduce using rule 40 (exp)]
    PLUS      [reduce using rule 40 (exp)]
    DIVIDE    [reduce using rule 40 (exp)]
    TIMES     [reduce using rule 40 (exp)]
    $default  reduce using rule 40 (exp)
